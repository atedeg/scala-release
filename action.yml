name: "Scala release"
description: "A simple Action to configure a Scala environment and release artifacts"
author: "Nicolas Farabegoli"

inputs:
  working-dir:
    description: "The directory in which the action runs the commands"
    required: false
    default: "./"
  semantic-release-enable:
    description: "If true enable semantic release bot"
    required: false
    default: "true"
  java-version:
    description: "The java version to use in the build"
    required: true
  pgp-secret:
    description: "The PGP private key used to sign the artifacts"
    required: true
  pgp-passphrase:
    description: "The passphrase associated to the PGP key used to sign the artifacts"
    required: true
  sonatype-username:
    description: "The username of the sonatype account used to publish to maven central"
    required: true
  sonatype-password:
    description: "The password of the sonatype account used to publish to maven central"
    required: true
  github-token:
    description: "The github token used by conventional commits"
    required: true
  pre-release-commands:
    description: "Commands to execute before the release step"
    required: false
    default: "echo -e 'pre-release phase'"
  release-commands:
    description: "Commands to execute for the release step. Required if 'semantic-release-enable' is set to false."
    required: false
    default: "sbt ci-release"
  post-release-commands:
    description: "Commands to execute after the release step"
    required: false
    default: "echo -e 'post-release phase'"

runs:
  using: "composite"
  steps:
    - name: Setup scala
      uses: actions/setup-java@v4.5.0
      with:
        distribution: 'adopt'
        java-version: ${{ inputs.java-version }}
        # cache: 'sbt'

    - name: Pre-release command(s)
      shell: bash
      run: ${{ inputs.pre-release-commands }}
      working-directory: ${{ inputs.working-dir }}

    - name: Publish to Maven Central
      if: ${{ inputs.semantic-release-enable == 'false' }}
      shell: bash
      run: ${{ inputs.release-commands }}
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        SONATYPE_USERNAME: ${{ inputs.sonatype-username }}
        SONATYPE_PASSWORD: ${{ inputs.sonatype-password }}
        PGP_PASSPHRASE: ${{ inputs.pgp-passphrase }}
        PGP_SECRET: ${{ inputs.pgp-secret }}
      working-directory: ${{ inputs.working-dir }}

    - name: Setup and execute semantic release
      id: release
      if: ${{ inputs.semantic-release-enable == 'true' }}
      shell: bash
      run: |
        echo '::set-output name=release-succeeded::false'
        npm install
        npx semantic-release
        echo '::set-output name=release-succeeded::true'
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        SONATYPE_USERNAME: ${{ inputs.sonatype-username }}
        SONATYPE_PASSWORD: ${{ inputs.sonatype-password }}
        PGP_PASSPHRASE: ${{ inputs.pgp-passphrase }}
        PGP_SECRET: ${{ inputs.pgp-secret }}
      working-directory: ${{ inputs.working-dir }}

    - name: Post-release command(s)
      if: steps.release.outputs.release-succeeded
      shell: bash
      run: ${{ inputs.post-release-commands }}
      working-directory: ${{ inputs.working-dir }}
branding:
  color: red
  icon: package